diff --git a/cros-disks/udev_device.cc b/cros-disks/udev_device.cc
index a36a05e4b0..c2a0430dfc 100644
--- a/cros-disks/udev_device.cc
+++ b/cros-disks/udev_device.cc
@@ -44,6 +44,8 @@ const char kPropertyCDROMMedia[] = "ID_CDROM_MEDIA";
 const char kPropertyCDROMMediaTrackCountData[] =
     "ID_CDROM_MEDIA_TRACK_COUNT_DATA";
 const char kPropertyDeviceType[] = "DEVTYPE";
+const char kPropertyBusType[] = "ID_BUS";
+const char kBusTypeUSB[] = "usb";
 const char kPropertyDeviceTypeUSBDevice[] = "usb_device";
 const char kPropertyFilesystemUsage[] = "ID_FS_USAGE";
 const char kPropertyMistSupportedDevice[] = "MIST_SUPPORTED_DEVICE";
@@ -296,7 +298,13 @@ bool UdevDevice::IsMobileBroadbandDevice() const {
 bool UdevDevice::IsAutoMountable() const {
   // TODO(benchan): Find a reliable way to detect if a device is a removable
   // storage as the removable attribute in sysfs does not always tell the truth.
-  return !IsOnBootDevice() && !IsVirtual();
+  const char* value = dev_->GetPropertyValue(kPropertyBusType);
+  bool isUsbDisk = false;
+  if (IsOnSdDevice())
+     return true;
+  if (value && strcmp(value, kBusTypeUSB) == 0)
+   isUsbDisk = true;
+  return isUsbDisk && !IsOnBootDevice() && !IsVirtual() && IsOnRemovableDevice();
 }
 
 bool UdevDevice::IsHidden() {
